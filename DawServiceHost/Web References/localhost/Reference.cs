//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DawServiceHost.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWorkflowTalkService", Namespace="http://tempuri.org/")]
    public partial class WorkflowTalkService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetWorkflowHostQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetViewerQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutHostMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutViewerMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMessageFromViewerQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMessageFromHostQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearViewerMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearHostMessagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WorkflowTalkService() {
            this.Url = global::DawServiceHost.Properties.Settings.Default.DawServiceHost_localhost_WorkflowTalkService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetWorkflowHostQueueCompletedEventHandler GetWorkflowHostQueueCompleted;
        
        /// <remarks/>
        public event GetViewerQueueCompletedEventHandler GetViewerQueueCompleted;
        
        /// <remarks/>
        public event PutHostMessageCompletedEventHandler PutHostMessageCompleted;
        
        /// <remarks/>
        public event PutViewerMessageCompletedEventHandler PutViewerMessageCompleted;
        
        /// <remarks/>
        public event RemoveMessageFromViewerQueueCompletedEventHandler RemoveMessageFromViewerQueueCompleted;
        
        /// <remarks/>
        public event RemoveMessageFromHostQueueCompletedEventHandler RemoveMessageFromHostQueueCompleted;
        
        /// <remarks/>
        public event ClearViewerMessagesCompletedEventHandler ClearViewerMessagesCompleted;
        
        /// <remarks/>
        public event ClearHostMessagesCompletedEventHandler ClearHostMessagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/GetWorkflowHostQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DawWCFService")]
        public MyMessage[] GetWorkflowHostQueue() {
            object[] results = this.Invoke("GetWorkflowHostQueue", new object[0]);
            return ((MyMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkflowHostQueueAsync() {
            this.GetWorkflowHostQueueAsync(null);
        }
        
        /// <remarks/>
        public void GetWorkflowHostQueueAsync(object userState) {
            if ((this.GetWorkflowHostQueueOperationCompleted == null)) {
                this.GetWorkflowHostQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkflowHostQueueOperationCompleted);
            }
            this.InvokeAsync("GetWorkflowHostQueue", new object[0], this.GetWorkflowHostQueueOperationCompleted, userState);
        }
        
        private void OnGetWorkflowHostQueueOperationCompleted(object arg) {
            if ((this.GetWorkflowHostQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkflowHostQueueCompleted(this, new GetWorkflowHostQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/GetViewerQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/DawWCFService")]
        public MyMessage[] GetViewerQueue() {
            object[] results = this.Invoke("GetViewerQueue", new object[0]);
            return ((MyMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetViewerQueueAsync() {
            this.GetViewerQueueAsync(null);
        }
        
        /// <remarks/>
        public void GetViewerQueueAsync(object userState) {
            if ((this.GetViewerQueueOperationCompleted == null)) {
                this.GetViewerQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewerQueueOperationCompleted);
            }
            this.InvokeAsync("GetViewerQueue", new object[0], this.GetViewerQueueOperationCompleted, userState);
        }
        
        private void OnGetViewerQueueOperationCompleted(object arg) {
            if ((this.GetViewerQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewerQueueCompleted(this, new GetViewerQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/PutHostMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutHostMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] MyMessage message) {
            this.Invoke("PutHostMessage", new object[] {
                        message});
        }
        
        /// <remarks/>
        public void PutHostMessageAsync(MyMessage message) {
            this.PutHostMessageAsync(message, null);
        }
        
        /// <remarks/>
        public void PutHostMessageAsync(MyMessage message, object userState) {
            if ((this.PutHostMessageOperationCompleted == null)) {
                this.PutHostMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutHostMessageOperationCompleted);
            }
            this.InvokeAsync("PutHostMessage", new object[] {
                        message}, this.PutHostMessageOperationCompleted, userState);
        }
        
        private void OnPutHostMessageOperationCompleted(object arg) {
            if ((this.PutHostMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutHostMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/PutViewerMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PutViewerMessage([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] MyMessage message) {
            this.Invoke("PutViewerMessage", new object[] {
                        message});
        }
        
        /// <remarks/>
        public void PutViewerMessageAsync(MyMessage message) {
            this.PutViewerMessageAsync(message, null);
        }
        
        /// <remarks/>
        public void PutViewerMessageAsync(MyMessage message, object userState) {
            if ((this.PutViewerMessageOperationCompleted == null)) {
                this.PutViewerMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutViewerMessageOperationCompleted);
            }
            this.InvokeAsync("PutViewerMessage", new object[] {
                        message}, this.PutViewerMessageOperationCompleted, userState);
        }
        
        private void OnPutViewerMessageOperationCompleted(object arg) {
            if ((this.PutViewerMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutViewerMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/RemoveMessageFromViewerQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveMessageFromViewerQueue([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] MyMessage message, out bool RemoveMessageFromViewerQueueResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool RemoveMessageFromViewerQueueResultSpecified) {
            object[] results = this.Invoke("RemoveMessageFromViewerQueue", new object[] {
                        message});
            RemoveMessageFromViewerQueueResult = ((bool)(results[0]));
            RemoveMessageFromViewerQueueResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void RemoveMessageFromViewerQueueAsync(MyMessage message) {
            this.RemoveMessageFromViewerQueueAsync(message, null);
        }
        
        /// <remarks/>
        public void RemoveMessageFromViewerQueueAsync(MyMessage message, object userState) {
            if ((this.RemoveMessageFromViewerQueueOperationCompleted == null)) {
                this.RemoveMessageFromViewerQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMessageFromViewerQueueOperationCompleted);
            }
            this.InvokeAsync("RemoveMessageFromViewerQueue", new object[] {
                        message}, this.RemoveMessageFromViewerQueueOperationCompleted, userState);
        }
        
        private void OnRemoveMessageFromViewerQueueOperationCompleted(object arg) {
            if ((this.RemoveMessageFromViewerQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMessageFromViewerQueueCompleted(this, new RemoveMessageFromViewerQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/RemoveMessageFromHostQueue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveMessageFromHostQueue([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] MyMessage message, out bool RemoveMessageFromHostQueueResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool RemoveMessageFromHostQueueResultSpecified) {
            object[] results = this.Invoke("RemoveMessageFromHostQueue", new object[] {
                        message});
            RemoveMessageFromHostQueueResult = ((bool)(results[0]));
            RemoveMessageFromHostQueueResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void RemoveMessageFromHostQueueAsync(MyMessage message) {
            this.RemoveMessageFromHostQueueAsync(message, null);
        }
        
        /// <remarks/>
        public void RemoveMessageFromHostQueueAsync(MyMessage message, object userState) {
            if ((this.RemoveMessageFromHostQueueOperationCompleted == null)) {
                this.RemoveMessageFromHostQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMessageFromHostQueueOperationCompleted);
            }
            this.InvokeAsync("RemoveMessageFromHostQueue", new object[] {
                        message}, this.RemoveMessageFromHostQueueOperationCompleted, userState);
        }
        
        private void OnRemoveMessageFromHostQueueOperationCompleted(object arg) {
            if ((this.RemoveMessageFromHostQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMessageFromHostQueueCompleted(this, new RemoveMessageFromHostQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/ClearViewerMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearViewerMessages() {
            this.Invoke("ClearViewerMessages", new object[0]);
        }
        
        /// <remarks/>
        public void ClearViewerMessagesAsync() {
            this.ClearViewerMessagesAsync(null);
        }
        
        /// <remarks/>
        public void ClearViewerMessagesAsync(object userState) {
            if ((this.ClearViewerMessagesOperationCompleted == null)) {
                this.ClearViewerMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearViewerMessagesOperationCompleted);
            }
            this.InvokeAsync("ClearViewerMessages", new object[0], this.ClearViewerMessagesOperationCompleted, userState);
        }
        
        private void OnClearViewerMessagesOperationCompleted(object arg) {
            if ((this.ClearViewerMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearViewerMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWorkflowTalkService/ClearHostMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearHostMessages() {
            this.Invoke("ClearHostMessages", new object[0]);
        }
        
        /// <remarks/>
        public void ClearHostMessagesAsync() {
            this.ClearHostMessagesAsync(null);
        }
        
        /// <remarks/>
        public void ClearHostMessagesAsync(object userState) {
            if ((this.ClearHostMessagesOperationCompleted == null)) {
                this.ClearHostMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearHostMessagesOperationCompleted);
            }
            this.InvokeAsync("ClearHostMessages", new object[0], this.ClearHostMessagesOperationCompleted, userState);
        }
        
        private void OnClearHostMessagesOperationCompleted(object arg) {
            if ((this.ClearHostMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearHostMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/DawWCFService")]
    public partial class MyMessage {
        
        private System.DateTime createDtField;
        
        private bool createDtFieldSpecified;
        
        private string guidField;
        
        private string typeField;
        
        /// <remarks/>
        public System.DateTime CreateDt {
            get {
                return this.createDtField;
            }
            set {
                this.createDtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreateDtSpecified {
            get {
                return this.createDtFieldSpecified;
            }
            set {
                this.createDtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetWorkflowHostQueueCompletedEventHandler(object sender, GetWorkflowHostQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkflowHostQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkflowHostQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetViewerQueueCompletedEventHandler(object sender, GetViewerQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewerQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetViewerQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MyMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MyMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PutHostMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PutViewerMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMessageFromViewerQueueCompletedEventHandler(object sender, RemoveMessageFromViewerQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMessageFromViewerQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMessageFromViewerQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool RemoveMessageFromViewerQueueResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool RemoveMessageFromViewerQueueResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMessageFromHostQueueCompletedEventHandler(object sender, RemoveMessageFromHostQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMessageFromHostQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMessageFromHostQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool RemoveMessageFromHostQueueResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool RemoveMessageFromHostQueueResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ClearViewerMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ClearHostMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591