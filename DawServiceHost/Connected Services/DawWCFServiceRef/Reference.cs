//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DawServiceHost.DawWCFServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyMessage", Namespace="http://schemas.datacontract.org/2004/07/DawWCFService")]
    [System.SerializableAttribute()]
    public partial class MyMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDt {
            get {
                return this.CreateDtField;
            }
            set {
                if ((this.CreateDtField.Equals(value) != true)) {
                    this.CreateDtField = value;
                    this.RaisePropertyChanged("CreateDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DawWCFServiceRef.IWorkflowTalkService")]
    public interface IWorkflowTalkService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/GetWorkflowHostQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/GetWorkflowHostQueueResponse")]
        DawServiceHost.DawWCFServiceRef.MyMessage[] GetWorkflowHostQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/GetWorkflowHostQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/GetWorkflowHostQueueResponse")]
        System.Threading.Tasks.Task<DawServiceHost.DawWCFServiceRef.MyMessage[]> GetWorkflowHostQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/GetViewerQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/GetViewerQueueResponse")]
        DawServiceHost.DawWCFServiceRef.MyMessage[] GetViewerQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/GetViewerQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/GetViewerQueueResponse")]
        System.Threading.Tasks.Task<DawServiceHost.DawWCFServiceRef.MyMessage[]> GetViewerQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/PutHostMessage", ReplyAction="http://tempuri.org/IWorkflowTalkService/PutHostMessageResponse")]
        void PutHostMessage(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/PutHostMessage", ReplyAction="http://tempuri.org/IWorkflowTalkService/PutHostMessageResponse")]
        System.Threading.Tasks.Task PutHostMessageAsync(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/PutViewerMessage", ReplyAction="http://tempuri.org/IWorkflowTalkService/PutViewerMessageResponse")]
        void PutViewerMessage(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/PutViewerMessage", ReplyAction="http://tempuri.org/IWorkflowTalkService/PutViewerMessageResponse")]
        System.Threading.Tasks.Task PutViewerMessageAsync(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromViewerQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromViewerQueueResponse")]
        bool RemoveMessageFromViewerQueue(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromViewerQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromViewerQueueResponse")]
        System.Threading.Tasks.Task<bool> RemoveMessageFromViewerQueueAsync(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromHostQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromHostQueueResponse")]
        bool RemoveMessageFromHostQueue(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromHostQueue", ReplyAction="http://tempuri.org/IWorkflowTalkService/RemoveMessageFromHostQueueResponse")]
        System.Threading.Tasks.Task<bool> RemoveMessageFromHostQueueAsync(DawServiceHost.DawWCFServiceRef.MyMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/ClearViewerMessages", ReplyAction="http://tempuri.org/IWorkflowTalkService/ClearViewerMessagesResponse")]
        void ClearViewerMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/ClearViewerMessages", ReplyAction="http://tempuri.org/IWorkflowTalkService/ClearViewerMessagesResponse")]
        System.Threading.Tasks.Task ClearViewerMessagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/ClearHostMessages", ReplyAction="http://tempuri.org/IWorkflowTalkService/ClearHostMessagesResponse")]
        void ClearHostMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkflowTalkService/ClearHostMessages", ReplyAction="http://tempuri.org/IWorkflowTalkService/ClearHostMessagesResponse")]
        System.Threading.Tasks.Task ClearHostMessagesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkflowTalkServiceChannel : DawServiceHost.DawWCFServiceRef.IWorkflowTalkService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkflowTalkServiceClient : System.ServiceModel.ClientBase<DawServiceHost.DawWCFServiceRef.IWorkflowTalkService>, DawServiceHost.DawWCFServiceRef.IWorkflowTalkService {
        
        public WorkflowTalkServiceClient() {
        }
        
        public WorkflowTalkServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkflowTalkServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkflowTalkServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkflowTalkServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DawServiceHost.DawWCFServiceRef.MyMessage[] GetWorkflowHostQueue() {
            return base.Channel.GetWorkflowHostQueue();
        }
        
        public System.Threading.Tasks.Task<DawServiceHost.DawWCFServiceRef.MyMessage[]> GetWorkflowHostQueueAsync() {
            return base.Channel.GetWorkflowHostQueueAsync();
        }
        
        public DawServiceHost.DawWCFServiceRef.MyMessage[] GetViewerQueue() {
            return base.Channel.GetViewerQueue();
        }
        
        public System.Threading.Tasks.Task<DawServiceHost.DawWCFServiceRef.MyMessage[]> GetViewerQueueAsync() {
            return base.Channel.GetViewerQueueAsync();
        }
        
        public void PutHostMessage(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            base.Channel.PutHostMessage(message);
        }
        
        public System.Threading.Tasks.Task PutHostMessageAsync(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            return base.Channel.PutHostMessageAsync(message);
        }
        
        public void PutViewerMessage(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            base.Channel.PutViewerMessage(message);
        }
        
        public System.Threading.Tasks.Task PutViewerMessageAsync(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            return base.Channel.PutViewerMessageAsync(message);
        }
        
        public bool RemoveMessageFromViewerQueue(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            return base.Channel.RemoveMessageFromViewerQueue(message);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMessageFromViewerQueueAsync(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            return base.Channel.RemoveMessageFromViewerQueueAsync(message);
        }
        
        public bool RemoveMessageFromHostQueue(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            return base.Channel.RemoveMessageFromHostQueue(message);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveMessageFromHostQueueAsync(DawServiceHost.DawWCFServiceRef.MyMessage message) {
            return base.Channel.RemoveMessageFromHostQueueAsync(message);
        }
        
        public void ClearViewerMessages() {
            base.Channel.ClearViewerMessages();
        }
        
        public System.Threading.Tasks.Task ClearViewerMessagesAsync() {
            return base.Channel.ClearViewerMessagesAsync();
        }
        
        public void ClearHostMessages() {
            base.Channel.ClearHostMessages();
        }
        
        public System.Threading.Tasks.Task ClearHostMessagesAsync() {
            return base.Channel.ClearHostMessagesAsync();
        }
    }
}
